---
title: "Model"
format:
  html:
    code-fold: false  # Optional: enable code folding instead of hiding
    echo: false       # Hide code globally
    message: false    # Hide messages globally
---

```{r}
library(reticulate)
```

```{python}
import duckdb
from pandas import get_dummies
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn import preprocessing
```

```{python}

## Get Data
con = duckdb.connect('my-db.duckdb')
df = con.execute("SELECT * FROM penguins").fetchdf().dropna()
```

```{python}
df.head(3)
```

```{python}

## Define Model and Fit
X = get_dummies(df[['bill_length_mm', 'species', 'sex']], drop_first = True)
y = df['body_mass_g']

model = LinearRegression().fit(X, y)
```

```{python}

## Get some information
print(f"R^2 {model.score(X,y)}")
print(f"Intercept {model.intercept_}")
print(f"Columns {X.columns}")
print(f"Coefficients {model.coef_}")
```

```{python}

## Turn into Vetiver Mode
from vetiver import VetiverModel
v = VetiverModel(model, model_name='penguin_model', prototype_data=X)
```

```{python}

## Save to Board
from pins import board_folder
from vetiver import vetiver_pin_write

model_board = board_folder("/data/model", allow_pickle_read = True)
vetiver_pin_write(model_board, v)
```

```{python}

## Turn model into API
from vetiver import VetiverAPI
app = VetiverAPI(v, check_prototype = True)
```

```{python}
con.close()
```

```{python}
#app.run(port = 8080)
```
