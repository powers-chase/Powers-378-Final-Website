{
    "type": [
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        3,
        2,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        2,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2
    ],
    "data": [
        "\nR version 4.2.1 (2022-06-23 ucrt) -- \"Funny-Looking Kid\"\nCopyright (C) 2022 The R Foundation for Statistical Computing\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()' on how to cite R or R packages in publications.\n\nType 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n\n",
        "- Project '~/Powers Math 378 Porject' loaded. [renv 1.0.7]\n[Workspace loaded from ~/Powers Math 378 Porject/.RData]\r\n\r\n",
        "> ",
        "renv::snapshot()",
        "- The lockfile is already up to date.\n",
        "> ",
        "install.packages(\"duckdb\")",
        "The following package(s) will be installed:\n- duckdb [0.10.1]\nThese packages will be installed into \"~/Powers Math 378 Porject/renv/library/R-4.2/x86_64-w64-mingw32\".\n\n",
        "Do you want to proceed? [Y/n]: ",
        "y",
        "\n# Installing packages --------------------------------------------------------\n- Installing duckdb ...                         OK [linked from cache]\nSuccessfully installed 1 package in 42 milliseconds.\n",
        "> ",
        "## Penguin Size and Mass by Sex and Species",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "library(dplyr)",
        "> ",
        "library(ggplot2)",
        "Error: package or namespace load failed for ‘ggplot2’ in loadNamespace(package, lib.loc):\n there is no package called ‘ggplot2’\n",
        "\nRestarting R session...\n\n",
        "> ",
        "renv::snapshot()",
        "- The lockfile is already up to date.\n",
        "> ",
        "install.packages(\"duckdb\")",
        "The following package(s) will be installed:\n- duckdb [0.10.1]\nThese packages will be installed into \"~/Powers Math 378 Porject/renv/library/R-4.2/x86_64-w64-mingw32\".\n\n",
        "Do you want to proceed? [Y/n]: ",
        "n",
        "\n",
        "> ",
        "## Penguin Size and Mass by Sex and Species",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "library(dplyr)",
        "> ",
        "library(ggplot2)",
        "> ",
        "library(dbplyr)",
        "> ",
        "",
        "> ",
        "con <- DBI::dbConnect(",
        "+ ",
        "  duckdb::duckdb(), ",
        "+ ",
        "  dbdir = \"my-db.duckdb\"",
        "+ ",
        "  )",
        "> ",
        "df <- dplyr::tbl(con, \"penguins\")",
        "> ",
        "head(df)",
        "> ",
        "df %>%",
        "+ ",
        "  group_by(species, sex) %>%",
        "+ ",
        "  summarise(",
        "+ ",
        "    across(",
        "+ ",
        "        ends_with(\"mm\") | ends_with(\"g\"),",
        "+ ",
        "      \\(x) mean(x, na.rm = TRUE)",
        "+ ",
        "      )",
        "+ ",
        "    ) %>%",
        "+ ",
        "  dplyr::collect() %>%",
        "+ ",
        "  knitr::kable()",
        "> ",
        "## Penguin Size vs Mass by Species",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "df %>%",
        "+ ",
        "  ggplot(aes(x = bill_length_mm, y = body_mass_g, color = species)) +",
        "+ ",
        "  geom_point() + ",
        "+ ",
        "  geom_smooth(method = \"lm\")",
        "> ",
        "DBI::dbDisconnect(con)",
        "> ",
        "reticulate::repl_python()",
        "Python 3.9.5 (C:/Users/C25Chase.Powers/OneDrive - afacademy.af.edu/Documents/Powers Math 378 Porject/.venv/Scripts/python.exe)\nReticulate 1.35.0 REPL -- A Python interpreter in R.\nEnter 'exit' or 'quit' to exit the REPL and return to R.\n",
        ">>> ",
        "",
        ">>> ",
        "exit",
        "Warning messages:\n",
        "1: The request to `use_python(\"C:/Program Files/Python39/python.exe\")` will be ignored because the environment variable RETICULATE_PYTHON is set to \"C:/Users/C25Chase.Powers/OneDrive - afacademy.af.edu/Documents/Powers Math 378 Porject/.venv/Scripts/python.exe\" \n",
        "2: Python 'C:/Program Files/Python39/python.exe' was requested but 'C:/Users/C25Chase.Powers/OneDrive - afacademy.af.edu/Documents/Powers Math 378 Porject/.venv/Scripts/python.exe' was loaded instead (see reticulate::py_config() for more information) \n",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "# Run the application",
        "> ",
        "shinyApp(ui = ui, server = server)",
        "Error in shinyApp(ui = ui, server = server) : \n  could not find function \"shinyApp\"\n",
        "> ",
        "install.packages(\"shiny\")",
        "# Downloading packages -------------------------------------------------------\n- Downloading shiny from CRAN ...               OK [4.6 Mb in 1.7s]\n- Downloading httpuv from CRAN ...              OK [942.7 Kb in 1.0s]\n- Downloading later from CRAN ...               OK [435.2 Kb in 0.9s]\n- Downloading promises from CRAN ...            OK [1.9 Mb in 1.1s]\n- Downloading xtable from CRAN ...              OK [690.2 Kb in 1.0s]\n- Downloading sourcetools from CRAN ...         OK [364.8 Kb in 1.0s]\nSuccessfully downloaded 6 packages in 8 seconds.\n",
        "\nThe following package(s) will be installed:\n- httpuv      [1.6.15]\n- later       [1.3.2]\n- promises    [1.3.0]\n- shiny       [1.8.1.1]\n- sourcetools [0.1.7-1]\n- xtable      [1.8-4]\nThese packages will be installed into \"~/Powers Math 378 Porject/renv/library/R-4.2/x86_64-w64-mingw32\".\n\n",
        "Do you want to proceed? [Y/n]: ",
        "y",
        "\n# Installing packages --------------------------------------------------------\n- Installing later ...                          OK [installed binary and cached in 1.2s]\n- Installing promises ...                       OK [installed binary and cached in 0.93s]\n- Installing httpuv ...                         OK [installed binary and cached in 1.5s]\n- Installing xtable ...                         OK [installed binary and cached in 0.6s]\n- Installing sourcetools ...                    OK [installed binary and cached in 0.59s]\n",
        "- Installing shiny ...                          OK [installed binary and cached in 1.9s]\nSuccessfully installed 6 packages in 7.1 seconds.\n",
        "> ",
        "install.packages(\"log4r\")",
        "# Downloading packages -------------------------------------------------------\n- Downloading log4r from CRAN ...               OK [92.5 Kb in 0.78s]\nSuccessfully downloaded 1 package in 0.89 seconds.\n\nThe following package(s) will be installed:\n- log4r [0.4.3]\nThese packages will be installed into \"~/Powers Math 378 Porject/renv/library/R-4.2/x86_64-w64-mingw32\".\n\n",
        "Do you want to proceed? [Y/n]: ",
        "y",
        "\n# Installing packages --------------------------------------------------------\n- Installing log4r ...                          OK [installed binary and cached in 0.48s]\nSuccessfully installed 1 package in 0.54 seconds.\n",
        "> ",
        "shiny::runApp('C:/Users/C25Chase.Powers/Downloads')",
        "Loading required package: shiny\n",
        "\nListening on http://127.0.0.1:4304\n",
        "INFO  [2024-04-17 15:41:38] App Started\n",
        "\n",
        "> ",
        "python -m pip install shiny",
        "Error: unexpected symbol in \"python -m pip\"\n",
        "> ",
        "python -m pip install shiny",
        "Error: unexpected symbol in \"python -m pip\"\n",
        "> ",
        "reticulate::repl_python()",
        "Python 3.9.5 (C:/Users/C25Chase.Powers/OneDrive - afacademy.af.edu/Documents/Powers Math 378 Porject/.venv/Scripts/python.exe)\nReticulate 1.35.0 REPL -- A Python interpreter in R.\nEnter 'exit' or 'quit' to exit the REPL and return to R.\n",
        ">>> ",
        "app = App(app_ui, server)",
        ">>> ",
        "quit",
        "> ",
        "renv::snapshot()",
        "- The lockfile is already up to date.\n",
        "> ",
        "reticulate::repl_python()",
        "Python 3.9.5 (C:/Users/C25Chase.Powers/OneDrive - afacademy.af.edu/Documents/Powers Math 378 Porject/.venv/Scripts/python.exe)\nReticulate 1.35.0 REPL -- A Python interpreter in R.\nEnter 'exit' or 'quit' to exit the REPL and return to R.\n",
        ">>> ",
        "",
        ">>> ",
        "quit",
        "> ",
        "runApp('C:/Users/C25Chase.Powers/Downloads')",
        "\nListening on http://127.0.0.1:4304\n",
        "INFO  [2024-04-17 16:16:58] App Started\n",
        "\n",
        "> ",
        "knitr::opts_chunk$set(echo = FALSE, error = FALSE, warning = FALSE)",
        "> ",
        "renv::snapshot()",
        "- The lockfile is already up to date.\n",
        "> ",
        "## Penguin Size and Mass by Sex and Species",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "library(dplyr)",
        "> ",
        "library(ggplot2)",
        "> ",
        "library(dbplyr)",
        "> ",
        "",
        "> ",
        "con <- DBI::dbConnect(",
        "+ ",
        "  duckdb::duckdb(), ",
        "+ ",
        "  dbdir = \"my-db.duckdb\"",
        "+ ",
        "  )",
        "> ",
        "df <- dplyr::tbl(con, \"penguins\")",
        "\u001B[1m\u001B[33mError\u001B[39m in `db_query_fields.DBIConnection()`:\u001B[22m\n\u001B[1m\u001B[22m\u001B[33m!\u001B[39m Can't query fields.\n\u001B[36mℹ\u001B[39m Using SQL: SELECT * FROM (FROM penguins) q01 WHERE (0 = 1)\n\u001B[1mCaused by error:\u001B[22m\n\u001B[33m!\u001B[39m rapi_prepare: Failed to prepare query SELECT *\nFROM (FROM penguins) q01\nWHERE (0 = 1)\nError: Catalog Error: Table with name penguins does not exist!\nDid you mean \"pg_enum\"?\nLINE 2: FROM (FROM penguins) q01\n                   ^\nBacktrace:\n\u001B[90m  1. \u001B[39m\u001B[1mdplyr\u001B[22m::tbl(con, \"penguins\")\n\u001B[90m  4. \u001B[39mdplyr:::tbl.DBIConnection(con, \"penguins\")\n\u001B[90m  6. \u001B[39m\u001B[1mdbplyr\u001B[22m:::tbl.src_dbi(...)\n\u001B[90m  7. \u001B[39mdbplyr::tbl_sql(c(subclass, \"dbi\"), src = src, from = from, ...)\n\u001B[90m 10. \u001B[39mdbplyr:::dbplyr_query_fields(src$con, source)\n\u001B[90m 11. \u001B[39mdbplyr:::dbplyr_fallback(con, \"db_query_fields\", ...)\n\u001B[90m 13. \u001B[39m\u001B[1m\u001B[94mdbplyr:::db_query_fields.DBIConnection(\u001B[39m\u001B[22mcon, ...\u001B[1m\u001B[94m)\u001B[39m\u001B[22m\n",
        "> ",
        "head(df)",
        "\u001B[1m\u001B[33mError\u001B[39m in `collect()`:\u001B[22m\n\u001B[1m\u001B[22m\u001B[33m!\u001B[39m Failed to collect lazy table.\n\u001B[1mCaused by error:\u001B[22m\n\u001B[33m!\u001B[39m rapi_prepare: Invalid connection\nBacktrace:\n\u001B[90m  1. \u001B[39m\u001B[1mbase\u001B[22m (local) `<fn>`(x)\n\u001B[90m  2. \u001B[39mprint.tbl_sql(x)\n\u001B[90m  3. \u001B[39moverridePrint(o$x, o$options, o$className, o$nRow, o$nCol)\n\u001B[90m  5. \u001B[39m\u001B[1mdbplyr\u001B[22m:::as.data.frame.tbl_sql(head(x, max.print))\n\u001B[90m  8. \u001B[39m\u001B[1m\u001B[94mdbplyr:::collect.tbl_sql(\u001B[39m\u001B[22mx, n = n\u001B[1m\u001B[94m)\u001B[39m\u001B[22m\n\u001B[90m 11. \u001B[39mdbplyr:::db_collect.DBIConnection(...)\n\u001B[90m 13. \u001B[39m\u001B[1mduckdb\u001B[22m::dbSendQuery(con, sql)\n\u001B[90m 14. \u001B[39mduckdb (local) .local(conn, statement, ...)\n\u001B[90m 15. \u001B[39mduckdb:::rapi_prepare(conn@conn_ref, statement)\n",
        "> ",
        "## Penguin Size and Mass by Sex and Species",
        "> ",
        "",
        "> ",
        "library(palmerpenguins)",
        "> ",
        "library(dplyr)",
        "> ",
        "library(ggplot2)",
        "> ",
        "library(dbplyr)",
        "> ",
        "",
        "> ",
        "con <- DBI::dbConnect(",
        "+ ",
        "  duckdb::duckdb(), ",
        "+ ",
        "  dbdir = \"my-db.duckdb\"",
        "+ ",
        "  )",
        "> ",
        "df <- dplyr::tbl(con, \"penguins\")",
        "\u001B[1m\u001B[33mError\u001B[39m in `db_query_fields.DBIConnection()`:\u001B[22m\n\u001B[1m\u001B[22m\u001B[33m!\u001B[39m Can't query fields.\n\u001B[36mℹ\u001B[39m Using SQL: SELECT * FROM (FROM penguins) q01 WHERE (0 = 1)\n\u001B[1mCaused by error:\u001B[22m\n\u001B[33m!\u001B[39m rapi_prepare: Failed to prepare query SELECT *\nFROM (FROM penguins) q01\nWHERE (0 = 1)\nError: Catalog Error: Table with name penguins does not exist!\nDid you mean \"pg_enum\"?\nLINE 2: FROM (FROM penguins) q01\n                   ^\nBacktrace:\n\u001B[90m  1. \u001B[39m\u001B[1mdplyr\u001B[22m::tbl(con, \"penguins\")\n\u001B[90m  4. \u001B[39mdplyr:::tbl.DBIConnection(con, \"penguins\")\n\u001B[90m  6. \u001B[39m\u001B[1mdbplyr\u001B[22m:::tbl.src_dbi(...)\n\u001B[90m  7. \u001B[39mdbplyr::tbl_sql(c(subclass, \"dbi\"), src = src, from = from, ...)\n\u001B[90m 10. \u001B[39mdbplyr:::dbplyr_query_fields(src$con, source)\n\u001B[90m 11. \u001B[39mdbplyr:::dbplyr_fallback(con, \"db_query_fields\", ...)\n\u001B[90m 13. \u001B[39m\u001B[1m\u001B[94mdbplyr:::db_query_fields.DBIConnection(\u001B[39m\u001B[22mcon, ...\u001B[1m\u001B[94m)\u001B[39m\u001B[22m\n",
        "> ",
        "DBI::dbDisconnect(con)",
        "> ",
        "renv::snapshot()",
        "- The lockfile is already up to date.\n",
        "> ",
        "## Penguin Size and Mass by Sex and Species",
        "> ",
        "",
        "> ",
        "library(palmerpenguins)",
        "> ",
        "library(dplyr)",
        "> ",
        "library(ggplot2)",
        "> ",
        "library(dbplyr)",
        "> ",
        "",
        "> ",
        "con <- DBI::dbConnect(",
        "+ ",
        "  duckdb::duckdb(), ",
        "+ ",
        "  dbdir = \"my-db.duckdb\"",
        "+ ",
        "  )",
        "> ",
        "df <- dplyr::tbl(con, \"penguins\")",
        "\u001B[1m\u001B[33mError\u001B[39m in `db_query_fields.DBIConnection()`:\u001B[22m\n\u001B[1m\u001B[22m\u001B[33m!\u001B[39m Can't query fields.\n\u001B[36mℹ\u001B[39m Using SQL: SELECT * FROM (FROM penguins) q02 WHERE (0 = 1)\n\u001B[1mCaused by error:\u001B[22m\n\u001B[33m!\u001B[39m rapi_prepare: Failed to prepare query SELECT *\nFROM (FROM penguins) q02\nWHERE (0 = 1)\nError: Catalog Error: Table with name penguins does not exist!\nDid you mean \"pg_enum\"?\nLINE 2: FROM (FROM penguins) q02\n                   ^\nBacktrace:\n\u001B[90m  1. \u001B[39m\u001B[1mdplyr\u001B[22m::tbl(con, \"penguins\")\n\u001B[90m  4. \u001B[39mdplyr:::tbl.DBIConnection(con, \"penguins\")\n\u001B[90m  6. \u001B[39m\u001B[1mdbplyr\u001B[22m:::tbl.src_dbi(...)\n\u001B[90m  7. \u001B[39mdbplyr::tbl_sql(c(subclass, \"dbi\"), src = src, from = from, ...)\n\u001B[90m 10. \u001B[39mdbplyr:::dbplyr_query_fields(src$con, source)\n\u001B[90m 11. \u001B[39mdbplyr:::dbplyr_fallback(con, \"db_query_fields\", ...)\n\u001B[90m 13. \u001B[39m\u001B[1m\u001B[94mdbplyr:::db_query_fields.DBIConnection(\u001B[39m\u001B[22mcon, ...\u001B[1m\u001B[94m)\u001B[39m\u001B[22m\n",
        "> ",
        "head(df)",
        "\u001B[1m\u001B[33mError\u001B[39m in `collect()`:\u001B[22m\n\u001B[1m\u001B[22m\u001B[33m!\u001B[39m Failed to collect lazy table.\n\u001B[1mCaused by error:\u001B[22m\n\u001B[33m!\u001B[39m rapi_prepare: Invalid connection\nBacktrace:\n\u001B[90m  1. \u001B[39m\u001B[1mbase\u001B[22m (local) `<fn>`(x)\n\u001B[90m  2. \u001B[39mprint.tbl_sql(x)\n\u001B[90m  3. \u001B[39moverridePrint(o$x, o$options, o$className, o$nRow, o$nCol)\n\u001B[90m  5. \u001B[39m\u001B[1mdbplyr\u001B[22m:::as.data.frame.tbl_sql(head(x, max.print))\n\u001B[90m  8. \u001B[39m\u001B[1m\u001B[94mdbplyr:::collect.tbl_sql(\u001B[39m\u001B[22mx, n = n\u001B[1m\u001B[94m)\u001B[39m\u001B[22m\n\u001B[90m 11. \u001B[39mdbplyr:::db_collect.DBIConnection(...)\n\u001B[90m 13. \u001B[39m\u001B[1mduckdb\u001B[22m::dbSendQuery(con, sql)\n\u001B[90m 14. \u001B[39mduckdb (local) .local(conn, statement, ...)\n\u001B[90m 15. \u001B[39mduckdb:::rapi_prepare(conn@conn_ref, statement)\n",
        "\nRestarting R session...\n\n",
        "Loading required package: duckdb\n",
        "Loading required package: DBI\n",
        "> ",
        "knitr::opts_chunk$set(echo = FALSE, error = FALSE, warning = FALSE)",
        "> ",
        "knitr::opts_chunk$set(echo = FALSE, error = FALSE, warning = FALSE)",
        "> ",
        "renv::snapshot()",
        "The following package(s) will be updated in the lockfile:\n\n# CRAN -----------------------------------------------------------------------\n- palmerpenguins   [* -> 0.1.1]\n\n",
        "Do you want to proceed? [Y/n]: ",
        "y",
        "\n- Lockfile written to \"~/Powers Math 378 Porject/renv.lock\".\n",
        "> ",
        "## Penguin Size and Mass by Sex and Species",
        "> ",
        "",
        "> ",
        "library(palmerpenguins)",
        "> ",
        "library(dplyr)",
        "> ",
        "library(ggplot2)",
        "> ",
        "library(dbplyr)",
        "> ",
        "",
        "> ",
        "con <- DBI::dbConnect(",
        "+ ",
        "  duckdb::duckdb(), ",
        "+ ",
        "  dbdir = \"my-db.duckdb\"",
        "+ ",
        "  )",
        "> ",
        "df <- dplyr::tbl(con, \"penguins\")",
        "\u001B[1m\u001B[33mError\u001B[39m in `db_query_fields.DBIConnection()`:\u001B[22m\n\u001B[1m\u001B[22m\u001B[33m!\u001B[39m Can't query fields.\n\u001B[36mℹ\u001B[39m Using SQL: SELECT * FROM (FROM penguins) q01 WHERE (0 = 1)\n\u001B[1mCaused by error:\u001B[22m\n\u001B[33m!\u001B[39m rapi_prepare: Failed to prepare query SELECT *\nFROM (FROM penguins) q01\nWHERE (0 = 1)\nError: Catalog Error: Table with name penguins does not exist!\nDid you mean \"pg_enum\"?\nLINE 2: FROM (FROM penguins) q01\n                   ^\nBacktrace:\n\u001B[90m  1. \u001B[39m\u001B[1mdplyr\u001B[22m::tbl(con, \"penguins\")\n\u001B[90m  4. \u001B[39mdplyr:::tbl.DBIConnection(con, \"penguins\")\n\u001B[90m  6. \u001B[39m\u001B[1mdbplyr\u001B[22m:::tbl.src_dbi(...)\n\u001B[90m  7. \u001B[39mdbplyr::tbl_sql(c(subclass, \"dbi\"), src = src, from = from, ...)\n\u001B[90m 10. \u001B[39mdbplyr:::dbplyr_query_fields(src$con, source)\n\u001B[90m 11. \u001B[39mdbplyr:::dbplyr_fallback(con, \"db_query_fields\", ...)\n\u001B[90m 13. \u001B[39m\u001B[1m\u001B[94mdbplyr:::db_query_fields.DBIConnection(\u001B[39m\u001B[22mcon, ...\u001B[1m\u001B[94m)\u001B[39m\u001B[22m\n",
        "> ",
        "install.packages(\"dplyr\")",
        "The following package(s) will be installed:\n- dplyr [1.1.4]\nThese packages will be installed into \"~/Powers Math 378 Porject/renv/library/R-4.2/x86_64-w64-mingw32\".\n\n",
        "Do you want to proceed? [Y/n]: ",
        "y",
        "\n# Installing packages --------------------------------------------------------\n- Installing dplyr ...                          OK [linked from cache]\nSuccessfully installed 1 package in 58 milliseconds.\n",
        "> ",
        "## Penguin Size and Mass by Sex and Species",
        "> ",
        "",
        "> ",
        "library(palmerpenguins)",
        "> ",
        "library(dplyr)",
        "> ",
        "library(ggplot2)",
        "> ",
        "library(dbplyr)",
        "> ",
        "",
        "> ",
        "con <- DBI::dbConnect(",
        "+ ",
        "  duckdb::duckdb(), ",
        "+ ",
        "  dbdir = \"my-db.duckdb\"",
        "+ ",
        "  )",
        "> ",
        "df <- dplyr::tbl(con, \"penguins\")",
        "\u001B[1m\u001B[33mError\u001B[39m in `db_query_fields.DBIConnection()`:\u001B[22m\n\u001B[1m\u001B[22m\u001B[33m!\u001B[39m Can't query fields.\n\u001B[36mℹ\u001B[39m Using SQL: SELECT * FROM (FROM penguins) q02 WHERE (0 = 1)\n\u001B[1mCaused by error:\u001B[22m\n\u001B[33m!\u001B[39m rapi_prepare: Failed to prepare query SELECT *\nFROM (FROM penguins) q02\nWHERE (0 = 1)\nError: Catalog Error: Table with name penguins does not exist!\nDid you mean \"pg_enum\"?\nLINE 2: FROM (FROM penguins) q02\n                   ^\nBacktrace:\n\u001B[90m  1. \u001B[39m\u001B[1mdplyr\u001B[22m::tbl(con, \"penguins\")\n\u001B[90m  4. \u001B[39mdplyr:::tbl.DBIConnection(con, \"penguins\")\n\u001B[90m  6. \u001B[39m\u001B[1mdbplyr\u001B[22m:::tbl.src_dbi(...)\n\u001B[90m  7. \u001B[39mdbplyr::tbl_sql(c(subclass, \"dbi\"), src = src, from = from, ...)\n\u001B[90m 10. \u001B[39mdbplyr:::dbplyr_query_fields(src$con, source)\n\u001B[90m 11. \u001B[39mdbplyr:::dbplyr_fallback(con, \"db_query_fields\", ...)\n\u001B[90m 13. \u001B[39m\u001B[1m\u001B[94mdbplyr:::db_query_fields.DBIConnection(\u001B[39m\u001B[22mcon, ...\u001B[1m\u001B[94m)\u001B[39m\u001B[22m\n",
        "> ",
        "install.packages(\"duckdb\")",
        "The following package(s) will be installed:\n- duckdb [0.10.1]\nThese packages will be installed into \"~/Powers Math 378 Porject/renv/library/R-4.2/x86_64-w64-mingw32\".\n\n",
        "Do you want to proceed? [Y/n]: ",
        "y",
        "\n# Installing packages --------------------------------------------------------\n- Installing duckdb ...                         OK [linked from cache]\nSuccessfully installed 1 package in 41 milliseconds.\n",
        "> ",
        "## Penguin Size and Mass by Sex and Species",
        "> ",
        "",
        "> ",
        "library(palmerpenguins)",
        "> ",
        "library(dplyr)",
        "> ",
        "library(ggplot2)",
        "> ",
        "library(dbplyr)",
        "> ",
        "",
        "> ",
        "con <- DBI::dbConnect(",
        "+ ",
        "  duckdb::duckdb(), ",
        "+ ",
        "  dbdir = \"my-db.duckdb\"",
        "+ ",
        "  )",
        "> ",
        "df <- dplyr::tbl(con, \"penguins\")",
        "\u001B[1m\u001B[33mError\u001B[39m in `db_query_fields.DBIConnection()`:\u001B[22m\n\u001B[1m\u001B[22m\u001B[33m!\u001B[39m Can't query fields.\n\u001B[36mℹ\u001B[39m Using SQL: SELECT * FROM (FROM penguins) q03 WHERE (0 = 1)\n\u001B[1mCaused by error:\u001B[22m\n\u001B[33m!\u001B[39m rapi_prepare: Failed to prepare query SELECT *\nFROM (FROM penguins) q03\nWHERE (0 = 1)\nError: Catalog Error: Table with name penguins does not exist!\nDid you mean \"pg_enum\"?\nLINE 2: FROM (FROM penguins) q03\n                   ^\nBacktrace:\n\u001B[90m  1. \u001B[39m\u001B[1mdplyr\u001B[22m::tbl(con, \"penguins\")\n\u001B[90m  4. \u001B[39mdplyr:::tbl.DBIConnection(con, \"penguins\")\n\u001B[90m  6. \u001B[39m\u001B[1mdbplyr\u001B[22m:::tbl.src_dbi(...)\n\u001B[90m  7. \u001B[39mdbplyr::tbl_sql(c(subclass, \"dbi\"), src = src, from = from, ...)\n\u001B[90m 10. \u001B[39mdbplyr:::dbplyr_query_fields(src$con, source)\n\u001B[90m 11. \u001B[39mdbplyr:::dbplyr_fallback(con, \"db_query_fields\", ...)\n\u001B[90m 13. \u001B[39m\u001B[1m\u001B[94mdbplyr:::db_query_fields.DBIConnection(\u001B[39m\u001B[22mcon, ...\u001B[1m\u001B[94m)\u001B[39m\u001B[22m\n",
        "> ",
        "install.packages(\"palmerpenguins\")",
        "The following package(s) will be installed:\n- palmerpenguins [0.1.1]\nThese packages will be installed into \"~/Powers Math 378 Porject/renv/library/R-4.2/x86_64-w64-mingw32\".\n\n",
        "Do you want to proceed? [Y/n]: ",
        "y",
        "\n# Installing packages --------------------------------------------------------\n- Installing palmerpenguins ...                 OK [linked from cache]\nSuccessfully installed 1 package in 39 milliseconds.\n",
        "> ",
        "## Penguin Size and Mass by Sex and Species",
        "> ",
        "",
        "> ",
        "library(palmerpenguins)",
        "> ",
        "library(dplyr)",
        "> ",
        "library(ggplot2)",
        "> ",
        "library(dbplyr)",
        "> ",
        "",
        "> ",
        "con <- DBI::dbConnect(",
        "+ ",
        "  duckdb::duckdb(), ",
        "+ ",
        "  dbdir = \"my-db.duckdb\"",
        "+ ",
        "  )",
        "> ",
        "df <- dplyr::tbl(con, \"penguins\")",
        "\u001B[1m\u001B[33mError\u001B[39m in `db_query_fields.DBIConnection()`:\u001B[22m\n\u001B[1m\u001B[22m\u001B[33m!\u001B[39m Can't query fields.\n\u001B[36mℹ\u001B[39m Using SQL: SELECT * FROM (FROM penguins) q04 WHERE (0 = 1)\n\u001B[1mCaused by error:\u001B[22m\n\u001B[33m!\u001B[39m rapi_prepare: Failed to prepare query SELECT *\nFROM (FROM penguins) q04\nWHERE (0 = 1)\nError: Catalog Error: Table with name penguins does not exist!\nDid you mean \"pg_enum\"?\nLINE 2: FROM (FROM penguins) q04\n                   ^\nBacktrace:\n\u001B[90m  1. \u001B[39m\u001B[1mdplyr\u001B[22m::tbl(con, \"penguins\")\n\u001B[90m  4. \u001B[39mdplyr:::tbl.DBIConnection(con, \"penguins\")\n\u001B[90m  6. \u001B[39m\u001B[1mdbplyr\u001B[22m:::tbl.src_dbi(...)\n\u001B[90m  7. \u001B[39mdbplyr::tbl_sql(c(subclass, \"dbi\"), src = src, from = from, ...)\n\u001B[90m 10. \u001B[39mdbplyr:::dbplyr_query_fields(src$con, source)\n\u001B[90m 11. \u001B[39mdbplyr:::dbplyr_fallback(con, \"db_query_fields\", ...)\n\u001B[90m 13. \u001B[39m\u001B[1m\u001B[94mdbplyr:::db_query_fields.DBIConnection(\u001B[39m\u001B[22mcon, ...\u001B[1m\u001B[94m)\u001B[39m\u001B[22m\n",
        "> ",
        "install.packages(\"dbpylr\")",
        "Error: package 'dbpylr' is not available\n",
        "> ",
        "install.packages(\"dbplyr\")",
        "The following package(s) will be installed:\n- dbplyr [2.5.0]\nThese packages will be installed into \"~/Powers Math 378 Porject/renv/library/R-4.2/x86_64-w64-mingw32\".\n\n",
        "Do you want to proceed? [Y/n]: ",
        "y",
        "\n# Installing packages --------------------------------------------------------\n- Installing dbplyr ...                         OK [linked from cache]\nSuccessfully installed 1 package in 34 milliseconds.\n",
        "> ",
        "## Penguin Size and Mass by Sex and Species",
        "> ",
        "",
        "> ",
        "library(palmerpenguins)",
        "> ",
        "library(dplyr)",
        "> ",
        "library(ggplot2)",
        "> ",
        "library(dbplyr)",
        "> ",
        "",
        "> ",
        "con <- DBI::dbConnect(",
        "+ ",
        "  duckdb::duckdb(), ",
        "+ ",
        "  dbdir = \"my-db.duckdb\"",
        "+ ",
        "  )",
        "> ",
        "df <- dplyr::tbl(con, \"penguins\")",
        "\u001B[1m\u001B[33mError\u001B[39m in `db_query_fields.DBIConnection()`:\u001B[22m\n\u001B[1m\u001B[22m\u001B[33m!\u001B[39m Can't query fields.\n\u001B[36mℹ\u001B[39m Using SQL: SELECT * FROM (FROM penguins) q05 WHERE (0 = 1)\n\u001B[1mCaused by error:\u001B[22m\n\u001B[33m!\u001B[39m rapi_prepare: Failed to prepare query SELECT *\nFROM (FROM penguins) q05\nWHERE (0 = 1)\nError: Catalog Error: Table with name penguins does not exist!\nDid you mean \"pg_enum\"?\nLINE 2: FROM (FROM penguins) q05\n                   ^\nBacktrace:\n\u001B[90m  1. \u001B[39m\u001B[1mdplyr\u001B[22m::tbl(con, \"penguins\")\n\u001B[90m  4. \u001B[39mdplyr:::tbl.DBIConnection(con, \"penguins\")\n\u001B[90m  6. \u001B[39m\u001B[1mdbplyr\u001B[22m:::tbl.src_dbi(...)\n\u001B[90m  7. \u001B[39mdbplyr::tbl_sql(c(subclass, \"dbi\"), src = src, from = from, ...)\n\u001B[90m 10. \u001B[39mdbplyr:::dbplyr_query_fields(src$con, source)\n\u001B[90m 11. \u001B[39mdbplyr:::dbplyr_fallback(con, \"db_query_fields\", ...)\n\u001B[90m 13. \u001B[39m\u001B[1m\u001B[94mdbplyr:::db_query_fields.DBIConnection(\u001B[39m\u001B[22mcon, ...\u001B[1m\u001B[94m)\u001B[39m\u001B[22m\n",
        "\nRestarting R session...\n\n"
    ]
}